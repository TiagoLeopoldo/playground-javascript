// üîç Desafio #4.2 ‚Äî Tipagem e Paridade com Sabor de JavaScript
// Crie uma fun√ß√£o chamada checkEvenOrOdd que receba qualquer tipo de dado como par√¢metro e:
// - Verifique se √© um n√∫mero ou pode ser convertido para um n√∫mero.
// - Se n√£o for poss√≠vel converter, exiba:
// "Erro: o valor recebido n√£o √© um n√∫mero v√°lido."
// - Se for um n√∫mero v√°lido, informe:
// "O n√∫mero X √© par" ou "O n√∫mero X √© √≠mpar" conforme o caso.
// üí° B√¥nus: tente evitar repeti√ß√£o de l√≥gica interna, usando escopo compartilhado (por exemplo, declarar let sentence fora dos blocos)

const checkEvenOrOdd = (data) => {
  if (typeof data === "number") {
    const sentence = `O n√∫mero ${data}`;
    if (data % 2 === 0) {
      console.log(`${sentence} √© par.`);
    } else {
      console.log(`${sentence} √© √≠mpar.`);
    }
  } else {
    const parsedNumber = Number(data);
    if (Number.isNaN(parsedNumber)) {
      console.log("ERRO: o valor recebido n√£o √© um n√∫mero v√°lido.");
    } else {
      const sentence = `O n√∫mero ${parsedNumber}`;
      if (parsedNumber % 2 === 0) {
        console.log(`${sentence} √© par.`);
      } else {
        console.log(`${sentence} √© √≠mpar.`);
      }
    }
  }
};

checkEvenOrOdd("321");
checkEvenOrOdd(-52);
checkEvenOrOdd("bug");